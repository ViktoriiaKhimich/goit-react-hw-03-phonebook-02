{"version":3,"sources":["components/ContactListItem/ContactListItem.module.css","App.module.css","components/ContactFrom/ContactFrom.module.css","components/ContactFrom/ContactFrom.jsx","components/Filter/Filter.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","App.js","index.js","components/Filter/Filter.module.css"],"names":["module","exports","ContactFrom","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","nameFieldId","v4","numberFieldId","this","className","styles","form","formInput","htmlFor","formField","id","onChange","type","pattern","title","required","Component","Filter","filter","filterFieldId","inputField","input","ContactListItem","onClick","contactListItem","btn","ContactList","contacts","contactElements","map","idx","App","errorMessage","addContact","contact","find","newList","newContact","push","handleFilter","handleDelete","newContacts","splice","contactList","JSON","parse","localStorage","getItem","productList","stringify","setItem","normalizedFilter","toLowerCase","filteredContacts","includes","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95b7e750.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"ContactListItem_contactListItem__2urGF\",\"btn\":\"ContactListItem_btn__2d1l9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorMessage\":\"App_errorMessage__w2Dv5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactFrom_form__1FTiq\",\"formInput\":\"ContactFrom_formInput__uvetx\",\"formField\":\"ContactFrom_formField__adwmr\"};","import {Component} from 'react';\nimport {v4} from 'uuid'\n\nimport styles from './ContactFrom.module.css'\n\nclass ContactFrom extends Component {\n\n    state = {\n        name: \"\",\n        number: \"\"\n    }\n\n    handleChange = (e) => {\n        const {name, value} = e.target;\n        this.setState({\n            [name]: value,\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        \n        this.props.onSubmit(this.state)\n\n        this.reset()\n\n    }\n\n    \n\n    reset = () =>  {\n        this.setState({\n            name: '',\n            number: '',\n        })\n    }\n\n    render() {\n\n        const nameFieldId = v4();\n        const numberFieldId = v4();\n\n        const {name, number} = this.state;\n        const {handleChange, handleSubmit } = this;\n        return (\n            <>\n            <form className={styles.form} onSubmit={handleSubmit}>\n                <div className={styles.formInput}>\n                <label htmlFor={nameFieldId}>Name</label>\n                <input\n                    className={styles.formField}\n                    id={nameFieldId}\n                    value={name}\n                    onChange={handleChange}\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                    required\n                />\n                </div>\n\n                <div className={styles.formInput}>\n                <label  htmlFor={numberFieldId}>Number</label>\n                <input\n                    className={styles.formField}\n                    id={numberFieldId}\n                    value={number}\n                    onChange={handleChange}\n                    type=\"text\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                    required\n                />\n                </div>\n                <button type=\"submit\">Add contact</button>\n            </form>\n            </>\n        )\n\n    }\n}\n\nexport default ContactFrom;","import React from 'react';\nimport {v4} from 'uuid';\nimport PropTypes from 'prop-types'\n\nimport styles from './Filter.module.css'\n\nconst Filter = ({filter, onChange}) => {\n\n    const filterFieldId = v4();\n    return ( \n        <div className={styles.inputField}>\n        <label htmlFor={filterFieldId}>Find contacts by name</label>\n            <input \n            className={styles.input}\n            id={filterFieldId}\n            type=\"text\"\n            value={filter}\n            onChange={onChange}\n            />\n        \n        </div>\n     );\n}\n\nFilter.propTypes = {\n    filter: PropTypes.string.isRequired,\n}\n\n \nexport default Filter;","import React from 'react';\nimport PropTypes from 'prop-types'\n\nimport styles from './ContactListItem.module.css'\n\nconst ContactListItem = ({name, number, onClick}) => {\n    return (  \n        <li className={styles.contactListItem}>\n            <p>{name}: {number}</p>\n            <button className={styles.btn}type=\"button\" onClick={onClick}>Delete</button>\n        </li>\n    );\n}\n\nContactListItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n}\n \nexport default ContactListItem;","import React from 'react';\nimport PropTypes from 'prop-types'\nimport ContactListItem from '../ContactListItem'\n\nconst ContactList = ({contacts, onClick}) => {\n    const contactElements = contacts.map(({id, ...props}, idx) => <ContactListItem key={id} {...props} onClick={()=>onClick(idx)} />)\n    return (\n    <ul>\n        {contactElements}\n    </ul>\n    )\n}\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired\n    }).isRequired)\n}\n\n\n \nexport default ContactList;","import React, {Component} from 'react';\nimport {v4} from 'uuid'\n\nimport styles from './App.module.css'\n\nimport ContactForm from './components/ContactFrom';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList'\n\nclass App extends Component {\n    state = {\n        contacts: [],\n        filter: \"\",\n        errorMessage: \"\"\n    }\n\n    componentDidMount() {\n        const contactList = JSON.parse(localStorage.getItem('contacts'))\n        this.setState({\n            contacts: contactList || []\n        })\n    }\n\n    componentDidUpdate() {\n        const {contacts} = this.state;\n        const productList = JSON.stringify(contacts);\n        localStorage.setItem('contacts', productList)\n    }\n\n    addContact = ({name, number}) => {\n        \n        this.setState(({contacts}) => {\n            const contact = contacts.find(contact => contact.name === name || contact.number === number)\n    \n            if(!contact){\n                const newList = [...contacts];\n          \n                const newContact = {\n                    id: v4(),\n                    name, \n                    number\n                }\n                newList.push(newContact)\n                return {\n                    contacts: newList,\n                }\n            }\n            let errorMessage = \"\"\n            if (contact.name === name) {\n                errorMessage = `${name} is already in contacts`\n            }\n\n            return {\n                errorMessage\n            }\n        })\n    }\n\n    handleFilter = (e) => {\n        this.setState({\n            filter: e.target.value,\n        })\n    }\n\n    handleDelete = (idx) => {\n        this.setState(({contacts})=>{\n            const newContacts = [...contacts];\n            newContacts.splice(idx, 1);\n            return {\n                contacts: newContacts,\n            }\n        })\n    }\n\n\n    render() {\n        const {addContact, handleFilter, handleDelete} = this;\n        const {filter, contacts, errorMessage} = this.state;\n\n\n\n        const normalizedFilter = filter.toLowerCase();\n        const filteredContacts = contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter))\n        console.log(filteredContacts);\n\n        return (\n        <div>\n            <h1>Phonebook</h1>\n            <ContactForm onSubmit={addContact} />\n            {errorMessage && <p className={styles.errorMessage}>{errorMessage}</p>}\n\n            <h2>Contacts</h2>\n            <Filter filter={filter} onChange={handleFilter}/>\n            <ContactList onClick={handleDelete} contacts={filteredContacts}/>\n        </div>\n        )\n        \n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputField\":\"Filter_inputField__2xgV2\",\"input\":\"Filter_input__2DoVp\"};"],"sourceRoot":""}